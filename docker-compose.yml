services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: laravel-app
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    ports:
      - "5173:5173"
    volumes:
      - ./:/var/www
      - ~/.ssh:/root/.ssh:ro
      - ./php.ini:/usr/local/etc/php/php.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service (replacing PostgreSQL)
  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: email_saas
      MYSQL_ROOT_PASSWORD: email_saas
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - app-network

  #phpMyAdmin Service (replacing pgAdmin)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: email_saas
    networks:
      - app-network

  mailpit:
    image: axllent/mailpit
    container_name: mailpit
    ports:
      - "0.0.0.0:8025:8025"  # Explicitly bind to all interfaces
      - "1025:1025"
    networks:
      - app-network

  #Elasticsearch Service
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms2g -Xmx2g  # Increased for vector search
      - xpack.security.enabled=false  # For development only!
      - xpack.ml.enabled=true  # Enable ML features
      - cluster.routing.allocation.disk.threshold_enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  #Kibana Service (optional - for Elasticsearch management)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: kibana
    restart: unless-stopped
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false  # For development only!
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local
  elasticsearch-data:
    driver: local
